Vue.component('task', {
    props: ['data', 'filter'],
    methods: {
        changeTaskStatus() {
            this.$emit('change-task-status');
        },

        toggleTaskEditing() {
            this.$emit('toggle-task-editing');
        },

        isFoundFilterStr() {
            return this.data.title.toLowerCase().includes(this.filter.toLowerCase()) ||
                this.data.desc.toLowerCase().includes(this.filter.toLowerCase());
        }
    },
    template: `
    <div class="task" v-show="isFoundFilterStr()">
        <input type="checkbox" class="task__done" :checked="data.isDone" @change="changeTaskStatus()">&nbsp;&nbsp;
        <div v-if="!data.isEditing">
            <h3 class="task__title" @dblclick="toggleTaskEditing()">{{data.title}}</h3>
            <p class="task__desc" @dblclick="toggleTaskEditing()"><span v-html="data.desc"></span></p>
        </div>
        <div v-else class="add_task">
            <div class="add_task__input">
                <input type="text" v-model="data.title" @keyup.enter="toggleTaskEditing()">
                <textarea v-model="data.desc"></textarea>
            </div>
            <button class="add_task__btn" @click="toggleTaskEditing()">‚úÖ</button>
        </div>
    </div>
    `
});

var vue = new Vue({
    el: '#app',
    data() {
        return {
            filterText: '',
            hideCompleteList: false,
            newTask: { title: '', desc: '', isDone: false, isEditing: false },

            taskList: [
                {
                    title: '–î–æ–¥–µ–ª–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –• –∫ 30.03.2021',
                    desc: '–ü–æ–∑–≤–æ–Ω–∏—Ç—å –•, <br>–∑–∞–∫—Ä—ã—Ç—å <i>—Å–¥–µ–ª–∫—É</i>',
                    isDone: false,
                    isEditing: false
                },
                {
                    title: '–î–æ–¥–µ–ª–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –£ –∫ 30.04.2021',
                    desc: '–ó–∞–ø—É—Å—Ç–∏—Ç—å <b>—Å–∞–π—Ç</b> <a href="https://yandex.ru" target="_blank">Yandex</a>',
                    isDone: false,
                    isEditing: false
                },
                {
                    title: '–î–æ–¥–µ–ª–∞—Ç—å –ø—Ä–æ–µ–∫—Ç Z –∫ 30.05.2021',
                    desc: '<span style="color: red">–ö—É–ø–∏—Ç—å –•</span>',
                    isDone: true,
                    isEditing: false
                }
            ]
        }
    },
    filters: {
        emoji(value) {
            return value.replace('–≤–∞–∂–Ω–æ', '‚òùÔ∏è').replace('—Å—Ä–æ—á–Ω–æ', 'üïë');
        }
    },
    computed: {
        doTasksCount() {
            return this.taskList.filter(task => !task.isDone).length;
        },

        checkedTasksCount() {
            return this.taskList.filter(task => task.isDone).length;
        }
    },
    methods: {
        clearTaskInput() {
            this.newTask = { ...this.$options.data().newTask };
        },

        changeStatusTask(id) {
            if (this.taskList[id]) {
                this.taskList[id].isDone = !this.taskList[id].isDone;
            }
        },

        toggleTaskEditing(id) {
            if (!this.taskList[id]) return;

            // –ï—Å–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–∞ –∑–Ω–∞—á–∫–∏
            // + –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ç—Ä–æ–∫–∏ –≤ <br>
            if (this.taskList[id].isEditing && this.taskList[id].desc) {
                this.taskList[id].desc = this.$options.filters.emoji(this.taskList[id].desc);
                this.taskList[id].desc = this.taskList[id].desc.split('\n').join('<br>');
            }

            this.taskList[id].isEditing = !this.taskList[id].isEditing;

            /* –í–∞—Ä–∏–∞–Ω—Ç —Å –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º prompt (–≤ –±—É–¥—É—â–µ–º –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–µ)
            const newTaskTitle = prompt("Enter new task title: ", this.taskList[id].title);
            if (newTaskTitle) {
                this.taskList[id].title = newTaskTitle;
            } */
        },

        addTask() {
            if (!this.newTask.title) return;

            // –∑–∞–º–µ–Ω–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–∞ –∑–Ω–∞—á–∫–∏
            // –ê —Ç–∞–∫–∂–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å desc –¥–ª—è –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –≤ <span v-html="data.desc"></span>
            // –•–æ—Ä–æ—à–æ —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å—Å—ã–ª–∫–∏ –∏ —Ç–¥. 
            // –ù–æ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –æ–ø–∞—Å–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å html, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–ª–µ–º (XSS, –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ js –∫–æ–¥–∞). –î–æ—Ä–∞–±–æ—Ç–∞—Ç—å.
            // –ø—Ä–∏ –ø—É—Å—Ç–æ–º desc —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ <p> –±—É–¥–µ—Ç —Å min-height: 20px, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∏–∑–º–µ–Ω–∏—Ç—å –º—ã—à—å—é.
            if (this.newTask.desc) {
                this.newTask.desc = this.$options.filters.emoji(this.newTask.desc);
                this.newTask.desc = this.newTask.desc.split('\n').join('<br>');
            }

            this.taskList.push({ ...this.newTask });
            this.clearTaskInput();
        }
    }
});