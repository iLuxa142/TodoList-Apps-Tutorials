{"version":3,"sources":["webpack:///./src/views/Task.vue","webpack:///./src/views/Task.vue?66fe"],"names":["class","ref","for","style","type","task","title","submitHandler","desc","id","length","status","completeTask","computed","this","$store","getters","taskById","$route","params","data","chips","date","mounted","M","Chips","init","$refs","placeholder","tags","Datepicker","datepicker","format","defaultDate","Date","setDefaultDate","setTimeout","updateTextFields","methods","dispatch","$router","push","unmounted","destroy","render"],"mappings":"4IACOA,MAAM,O,SACQA,MAAM,oB,GAKdA,MAAM,QAAQC,IAAI,S,GAElBD,MAAM,e,EAEP,eAAqC,SAA9BE,IAAI,QAAO,eAAW,G,GACvBF,MAAM,oBAAoBG,MAAA,oC,GAG7BC,KAAK,OAAOH,IAAI,c,YAGrB,eAA6E,UAArED,MAAM,MAAMI,KAAK,SAASD,MAAA,yBAA4B,UAAM,G,0DAjB5E,eAuBM,MAvBN,EAuBM,CAtBO,EAAAE,M,iBAAX,eAoBM,MApBN,EAoBM,CAnBJ,eAAuB,yBAAjB,EAAAA,KAAKC,OAAK,GAEhB,eAgBO,QAhBA,SAAM,8CAAU,EAAAC,eAAA,EAAAA,cAAA,qBAAa,e,CAElC,eAAqC,MAArC,EAAqC,UAErC,eAIM,MAJN,EAIM,C,eAHF,eAAsG,YAA5FJ,MAAA,uB,qDAAoC,EAAAK,KAAI,IAAEC,GAAG,OAAOT,MAAM,wB,mBAAtB,EAAAQ,QAC9C,EACA,eAAkG,OAAlG,EAAkG,eAAzB,EAAAA,KAAKE,QAAQ,QAAK,KAG/F,eAAoC,QAApC,EAAoC,UAEd,cAAX,EAAAL,KAAKM,Q,iBAAhB,eAGM,SAFJ,EACA,eAAmF,UAA3EX,MAAM,WAAWI,KAAK,SAAU,QAAK,8BAAE,EAAAQ,cAAA,EAAAA,aAAA,sBAAc,oB,gDAInE,eAA+B,OAApB,sBAKA,OACbC,SAAU,CACRR,KADQ,WAEN,OAAOS,KAAKC,OAAOC,QAAQC,UAAUH,KAAKI,OAAOC,OAAOV,MAG5DW,KAAM,iBAAO,CACXZ,KAAM,GACNa,MAAO,KACPC,KAAM,OAERC,QAXa,WAYXT,KAAKN,KAAOM,KAAKT,KAAKG,KACtBM,KAAKO,MAAQG,EAAEC,MAAMC,KAAKZ,KAAKa,MAAMN,MAAO,CAC1CO,YAAa,YACbR,KAAMN,KAAKT,KAAKwB,OAElBf,KAAKQ,KAAOE,EAAEM,WAAWJ,KAAKZ,KAAKa,MAAMI,WAAY,CACnDC,OAAQ,aACRC,YAAa,IAAIC,KAAKpB,KAAKT,KAAKiB,MAChCa,gBAAgB,IAElBC,YAAW,WACTZ,EAAEa,qBACD,IAELC,QAAS,CACP/B,cADO,WAELO,KAAKC,OAAOwB,SAAS,aAAc,CACjC9B,GAAIK,KAAKT,KAAKI,GACdD,KAAMM,KAAKN,KACXc,KAAMR,KAAKQ,KAAKA,OAElBR,KAAK0B,QAAQC,KAAK,UAEpB7B,aATO,WAULE,KAAKC,OAAOwB,SAAS,eAAgBzB,KAAKT,KAAKI,IAC/CK,KAAK0B,QAAQC,KAAK,WAGtBC,UAxCa,WAyCP5B,KAAKQ,MAAQR,KAAKQ,KAAKqB,SACzB7B,KAAKQ,KAAKqB,QAGR7B,KAAKO,OAASP,KAAKO,MAAMsB,SAC3B7B,KAAKO,MAAMsB,UCvEjB,EAAOC,OAASA,EAED","file":"js/chunk-2d0b64c8.6fb1002c.js","sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div v-if=\"task\" class=\"col s6 offset-s3\">\r\n      <h1>{{task.title}}</h1>\r\n\r\n      <form @submit.prevent=\"submitHandler\">\r\n\r\n        <div class=\"chips\" ref=\"chips\"></div>\r\n\r\n        <div class=\"input-field\">\r\n            <textarea style=\"min-height: 150px;\" v-model=\"desc\" id=\"desc\" class=\"materialize-textarea\"></textarea>\r\n            <label for=\"desc\">Description</label>\r\n            <span class=\"character-counter\" style=\"float: right; font-size: 12px;\">{{desc.length}}/1024</span>\r\n        </div>\r\n\r\n        <input type=\"text\" ref=\"datepicker\">\r\n\r\n        <div v-if=\"task.status !== 'completed'\">\r\n          <button class=\"btn\" type=\"submit\" style=\"margin-right: 1rem;\">Update</button>\r\n          <button class=\"btn blue\" type=\"button\" @click=\"completeTask\">Complete task</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <h5 v-else>Task not found!</h5>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  computed: {\r\n    task() {\r\n      return this.$store.getters.taskById(+this.$route.params.id);\r\n    }\r\n  },\r\n  data: () => ({\r\n    desc: '',\r\n    chips: null,\r\n    date: null\r\n  }),\r\n  mounted() {\r\n    this.desc = this.task.desc;\r\n    this.chips = M.Chips.init(this.$refs.chips, {\r\n      placeholder: 'Task tags',\r\n      data: this.task.tags,\r\n    });\r\n    this.date = M.Datepicker.init(this.$refs.datepicker, {\r\n      format: 'dd.mm.yyyy',\r\n      defaultDate: new Date(this.task.date),\r\n      setDefaultDate: true\r\n    });\r\n    setTimeout(() => {\r\n      M.updateTextFields()\r\n    }, 0)\r\n  },\r\n  methods: {\r\n    submitHandler() {\r\n      this.$store.dispatch('updateTask', {\r\n        id: this.task.id,\r\n        desc: this.desc,\r\n        date: this.date.date\r\n      });\r\n      this.$router.push('/list');\r\n    },\r\n    completeTask() {\r\n      this.$store.dispatch('completeTask', this.task.id);\r\n      this.$router.push('/list');\r\n    }\r\n  },\r\n  unmounted() {\r\n    if (this.date && this.date.destroy) {\r\n      this.date.destroy;\r\n    }\r\n\r\n    if (this.chips && this.chips.destroy) {\r\n      this.chips.destroy;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./Task.vue?vue&type=template&id=303a7ca7\"\nimport script from \"./Task.vue?vue&type=script&lang=js\"\nexport * from \"./Task.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}